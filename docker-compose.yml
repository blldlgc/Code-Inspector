version: '3.8'

services:
  frontend:
    build:
      context: ./code-inspector
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - VITE_BACKEND_URL=http://localhost:8080
      - CHOKIDAR_USEPOLLING=true  # Hot reload için dosya değişikliklerini izle
      - WATCHPACK_POLLING=true    # Webpack için dosya değişikliklerini izle
    volumes:
      - ./code-inspector:/app:delegated
      - /app/node_modules
    depends_on:
      - backend
      - codebert
    networks:
      - code-inspector-network

  backend:
    build:
      context: ./CodeInspectorBackend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - CODEBERT_SERVICE_URL=http://codebert:8000
      - PYTHON_SERVICE_URL=http://codebert:8000
      - CORS_ALLOWED_ORIGINS=http://localhost:5173
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/codeinspector_db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=1234
    depends_on:
      - codebert
      - postgres-db
    networks:
      - code-inspector-network

  codebert:
    build:
      context: ./CodeBert
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:8080
    networks:
      - code-inspector-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  postgres-db:
    image: postgres:15
    container_name: codeinspector-postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: codeinspector_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - code-inspector-network

networks:
  code-inspector-network:
    driver: bridge

volumes:
  postgres-data: